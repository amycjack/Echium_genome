# run MAKER abi into training
mpiexec -n 16 maker maker_bopts.ctl maker_exe.ctl maker_opts.ctl

# reformat output for gene training (round 2)
gff3_merge -s -d echium_flye.pilon.curated_master_datastore_index.log > echium_rnd1.all.maker.gff
fasta_merge -d echium_flye.pilon.curated_master_datastore_index.log
gff3_merge -n -s -d echium_flye.pilon.curated_master_datastore_index.log > echium_rnd1.all.maker.noseq.gff

# reformat ab inito output for SNAP
mkdir snap_round1
maker2zff -x 0.25 -l 50 -d ../echium_flye.pilon.curated_master_datastore_index.log
mv genome.ann echium_rnd1.zff.length50_aed0.25.ann
mv genome.dna echium_rnd1.zff.length50_aed0.25.dna

# gather some stats and validate
fathom echium_rnd1.zff.length50_aed0.25.ann echium_rnd1.zff.length50_aed0.25.dna -gene-stats > gene-stats.log 2>&1
fathom echium_rnd1.zff.length50_aed0.25.ann echium_rnd1.zff.length50_aed0.25.dna -validate > validate.log 2>&1

# collect the training sequences and annotations, plus 1000 surrounding bp for training
fathom echium_rnd1.zff.length50_aed0.25.ann echium_rnd1.zff.length50_aed0.25.dna -categorize 1000 > categorize.log 2>&1
fathom uni.ann uni.dna -export 1000 -plus > uni-plus.log 2>&1

# create the training parameters
mkdir params
cd params
forge ../export.ann ../export.dna > ../forge.log 2>&1
cd ..

# assembly the HMM
hmm-assembler.pl echium_rnd1.zff.length50_aed0.25 params > Bcon_rnd1.zff.length50_aed0.25.hmm


# transcript alignments
awk '{ if ($2 == "est2genome") print $0 }' echium_rnd1.all.maker.noseq.gff > echium_rnd1.all.maker.est2genome.gff

# protein alignments
awk '{ if ($2 == "protein2genome") print $0 }' echium_rnd1.all.maker.noseq.gff > echium_rnd1.all.maker.protein2genome.gff

# repeat alignments
awk '{ if ($2 ~ "repeat") print $0 }' echium_rnd1.all.maker.noseq.gff > echium_rnd1.all.maker.repeats.gff

